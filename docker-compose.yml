version: '3.7'
services:
  nginx:
    image: nginx:1.15-alpine
    restart: unless-stopped
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8000:8000"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    networks:
      - my-net


  postgres:
    image: postgres
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - my-net
    environment:
      POSTGRES_PASSWORD: "testing123"


  graphql-engine:
    image: hasura/graphql-engine:v1.1.1
    ports:
      - "8080:8080"
    depends_on:
      - "postgres"
    restart: unless-stopped
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:testing123@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
    networks:
      - my-net


  nodews:
    build:
      context: ./data/nodews/
      dockerfile: Dockerfile
    user: "node"
    restart: unless-stopped
    expose:
      - "8011"
    ports:
      - "8011:8011"
    depends_on:
      - "nginx"
    environment:
      - NODE_ENV=production
    networks:
      - my-net
    volumes:
      - cover_data:/cover-data
    command: "node ./server.js"


volumes:
  db_data:
  cover_data:

networks:
  my-net:
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/24
